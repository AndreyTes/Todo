[{"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/index.js":"1","/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/App.js":"2","/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/reportWebVitals.js":"3","/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/Component/Task.js":"4","/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/Component/TaskInput.js":"5","/home/andrew/Документы/Помойка/Todolist13352/src/index.js":"6","/home/andrew/Документы/Помойка/Todolist13352/src/App.js":"7","/home/andrew/Документы/Помойка/Todolist13352/src/reportWebVitals.js":"8","/home/andrew/Документы/Помойка/Todolist13352/src/Component/TodoList.js":"9","/home/andrew/Документы/Помойка/Todolist13352/src/Component/Form.js":"10","/home/andrew/Документы/Помойка/Todolist13352/src/Component/Todo.js":"11"},{"size":500,"mtime":1612885260863,"results":"12","hashOfConfig":"13"},{"size":1705,"mtime":1613490755331,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612885260911,"results":"15","hashOfConfig":"13"},{"size":490,"mtime":1613484772338,"results":"16","hashOfConfig":"13"},{"size":760,"mtime":1613485983455,"results":"17","hashOfConfig":"13"},{"size":521,"mtime":1615044377879,"results":"18","hashOfConfig":"19"},{"size":1806,"mtime":1614869803758,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1612885260911,"results":"21","hashOfConfig":"19"},{"size":548,"mtime":1615044381470,"results":"22","hashOfConfig":"19"},{"size":1470,"mtime":1615355664794,"results":"23","hashOfConfig":"19"},{"size":944,"mtime":1615351862510,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"1s6qq50",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1fa6ctv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/index.js",[],["53","54"],"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/App.js",[],"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/reportWebVitals.js",[],"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/Component/Task.js",[],"/home/andrew/Документы/ToDo YOUTUBE/your-project-name/src/Component/TaskInput.js",[],"/home/andrew/Документы/Помойка/Todolist13352/src/index.js",[],["55","56"],"/home/andrew/Документы/Помойка/Todolist13352/src/App.js",["57"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Form from './Component/Form';\nimport TodoList from './Component/TodoList';\n\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('All');\n  const [filterTodos, setFilterTodos] = useState([]);\n/////////////////////////////////////////////////////////////\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n/////////////////////////////////////////////////////////////\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default: setFilterTodos(todos);\n        break;\n    }\n  };\n//////////////////////////////////////////////////////////////\nconst saveLocalTodos=() =>{\n    localStorage.setItem('todos',JSON.stringify(todos));\n};\nconst getLocalTodos=() =>{\n  if (localStorage.getItem('todos')===null){\n    localStorage.setItem('todos', JSON.stringify([]));\n  } else {\n    let todolocal = JSON.parse(localStorage.getItem('todos'));\n    setTodos(todolocal);\n  }\n};\n////////////////////////////////////////////////////////////////\n  return (\n    <div className=\"\">\n      <header>\n        <h1>Todo List</h1>\n      </header>\n      <Form todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n\n      />\n      <TodoList setTodos={setTodos}\n        todos={todos}\n        filterTodos={filterTodos} />\n\n    </div>\n  );\n}\n\n\nexport default App;\n","/home/andrew/Документы/Помойка/Todolist13352/src/reportWebVitals.js",[],"/home/andrew/Документы/Помойка/Todolist13352/src/Component/TodoList.js",["58"],"import React, { useState } from 'react';\nimport Todo from './Todo';\n\nfunction TodoList({ todos, setTodos, filterTodos }) {\n\n    return (\n        <div className=\"todo-container\">\n            <ul className=\"todo-list\">\n                {filterTodos.map(todo => (\n                    <Todo setTodos={setTodos}\n                        todos={todos}\n                        key={todo.id}\n                        todo={todo}\n                        text={todo.text} />\n                ))}\n            </ul>\n        </div>\n    )\n};\nexport default TodoList;","/home/andrew/Документы/Помойка/Todolist13352/src/Component/Form.js",["59"],"import React, { useState } from 'react';\n\n\n\nfunction Form({ setInputText, todos, setTodos, inputText, setStatus }) {\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value)\n    };\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        if (inputText.trim()) {\n            setTodos(\n                [...todos, { text: inputText, completed: false, id: Math.random() * 1000 }]\n            )\n        };\n        setInputText('');\n    };\n    const statusHandler = (e) => {\n        setStatus(e.target.value);\n    }\n    ///////////////////////////////////////////////////////\n    return (\n        <div>\n            <form>\n                <div className=\"input-flex\">\n                    <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n                    <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n                        <i className=\"fas fa-plus-square\"></i>\n                    </button>\n                </div>\n                <div className=\"select\">\n                    <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                        <option value=\"all\">All</option>\n                        <option value=\"completed\">Completed</option>\n                        <option value=\"uncompleted\">Uncompleted</option>\n                    </select>\n                </div>\n            </form>\n\n        </div>\n    );\n};\nexport default Form;","/home/andrew/Документы/Помойка/Todolist13352/src/Component/Todo.js",["60"],"import React, { useState } from 'react';\n\nfunction Todo({ text, setTodos, todos, todo }) {\n    const deleteHandler = () => {\n        setTodos(todos.filter(el => el.id !== todo.id))\n    };\n    const completeHandler = () => {\n        setTodos(todos.map((item) => {\n            if (item.id === todo.id) {\n                return {\n                    ...item, \n                    completed: !item.completed\n                };\n            }\n            return item;\n        }));\n    };\n    return (\n        <div className='todo'>\n            <li className={`todo-item ${todo.completed ? \"completed\" : ''}`}>{text}</li>\n            <button onClick={completeHandler} className='complete-btn'>\n                <i className='fas fa-check'></i>\n            </button>\n            <button onClick={deleteHandler} className='trash-btn' >\n                <i className='fas fa-trash '></i>\n            </button>\n\n        </div>\n    );\n};\nexport default Todo;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"61","replacedBy":"65"},{"ruleId":"63","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":21,"column":6,"nodeType":"69","endLine":21,"endColumn":21,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],["75"],["76"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["77"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"80","text":"81"},[549,564],"[todos, status, filterHandler, saveLocalTodos]"]